// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Diego Sep√∫lveda",
            "url": "https://github.com/DiegoSepuSoto",
            "email": "diegosepu.soto@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/{mini-url}": {
            "get": {
                "description": "Returns as an API Response the stored minified URL from mini URL provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MiniURL"
                ],
                "summary": "Get Minified URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MinifiedURLResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/shared.EchoErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Application Error",
                        "schema": {
                            "$ref": "#/definitions/shared.EchoErrorResponse"
                        }
                    }
                }
            }
        },
        "/{mini-url}": {
            "get": {
                "description": "Serves on the browser the stored minified URL from mini URL provided",
                "tags": [
                    "MiniURL"
                ],
                "summary": "Serve Minified URL",
                "responses": {
                    "301": {
                        "description": "Full Redirect",
                        "schema": {
                            "$ref": "#/definitions/models.MinifiedURLResponse"
                        }
                    },
                    "307": {
                        "description": "Temporary Redirect",
                        "schema": {
                            "$ref": "#/definitions/shared.EchoErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.MinifiedURLResponse": {
            "type": "object",
            "properties": {
                "minified_url": {
                    "type": "string"
                }
            }
        },
        "shared.EchoErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Mini URL Service",
	Description:      "This service will both return the minified URL and serve to the browser from the mini URL provided",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
